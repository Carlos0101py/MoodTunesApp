// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoodTunesApp.App.DataBase;

#nullable disable

namespace App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MoodTunesApp.App.Models.Library", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Library");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.MoodMater", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("MoodMater");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.MoodType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("MoodMaterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MusicId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MoodMaterId");

                    b.HasIndex("MusicId");

                    b.ToTable("MoodType");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.Music", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BannerURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MusicURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Music");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.Playlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("LibraryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LibraryId");

                    b.ToTable("Playlist");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.PlaylistMusic", b =>
                {
                    b.Property<Guid>("MusicId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlaylistId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MusicId", "PlaylistId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistMusic");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Token")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Session");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImageProfileURL")
                        .HasColumnType("longtext");

                    b.Property<Guid>("LibraryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MoodMaterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LibraryId")
                        .IsUnique();

                    b.HasIndex("MoodMaterId")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("MusicPlaylist", b =>
                {
                    b.Property<Guid>("MusicsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlaylistsId")
                        .HasColumnType("char(36)");

                    b.HasKey("MusicsId", "PlaylistsId");

                    b.HasIndex("PlaylistsId");

                    b.ToTable("MusicPlaylist");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.MoodType", b =>
                {
                    b.HasOne("MoodTunesApp.App.Models.MoodMater", "MoodMater")
                        .WithMany("MoodTypes")
                        .HasForeignKey("MoodMaterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodTunesApp.App.Models.Music", "Music")
                        .WithMany("MoodType")
                        .HasForeignKey("MusicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MoodMater");

                    b.Navigation("Music");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.Playlist", b =>
                {
                    b.HasOne("MoodTunesApp.App.Models.Library", "Library")
                        .WithMany("Playlists")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.PlaylistMusic", b =>
                {
                    b.HasOne("MoodTunesApp.App.Models.Music", "Music")
                        .WithMany("PlaylistMusics")
                        .HasForeignKey("MusicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodTunesApp.App.Models.Playlist", "Playlist")
                        .WithMany("PlaylistMusics")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Music");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.Session", b =>
                {
                    b.HasOne("MoodTunesApp.App.Models.User", "User")
                        .WithOne("Session")
                        .HasForeignKey("MoodTunesApp.App.Models.Session", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.User", b =>
                {
                    b.HasOne("MoodTunesApp.App.Models.Library", "Library")
                        .WithOne("User")
                        .HasForeignKey("MoodTunesApp.App.Models.User", "LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodTunesApp.App.Models.MoodMater", "MoodMater")
                        .WithOne("User")
                        .HasForeignKey("MoodTunesApp.App.Models.User", "MoodMaterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");

                    b.Navigation("MoodMater");
                });

            modelBuilder.Entity("MusicPlaylist", b =>
                {
                    b.HasOne("MoodTunesApp.App.Models.Music", null)
                        .WithMany()
                        .HasForeignKey("MusicsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoodTunesApp.App.Models.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.Library", b =>
                {
                    b.Navigation("Playlists");

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.MoodMater", b =>
                {
                    b.Navigation("MoodTypes");

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.Music", b =>
                {
                    b.Navigation("MoodType");

                    b.Navigation("PlaylistMusics");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.Playlist", b =>
                {
                    b.Navigation("PlaylistMusics");
                });

            modelBuilder.Entity("MoodTunesApp.App.Models.User", b =>
                {
                    b.Navigation("Session")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
